/**
 * Created by ZhangJiansen on 2016/12/15.
 * 动态添加dom片段
 */
define(['angular'],
    function(angular) {
        'use strict';
        angular.module('sino.DDom',[])
            .config(["$sceProvider",function($sceProvider){
                $sceProvider.enabled(true);
            }])
            .directive("sinoDom", ['$q','$timeout','$compile',
                function ($q,$timeout,$compile) {
                    return {
                        restrict:'A',
                        replace: true,
                        link:function ($scope, element, attrs, ctrl) {
                            var dom = $compile($scope.$eval(attrs.sinoDom))($scope);
                            $(element).append(dom);
                        }
                    }
                }
            ]).directive("sinoFormModule", ['$q','$http','$compile','$sce','$templateCache',
                function ($q,$http,$compile,$sce,$templateCache) {
                    return {
                        restrict:'A',
                        controllerAs: 'vm',
                        replace: true,
                        //template: '<div ng-include="getContentUrl()"></div>',
                        //terminal: true,
                        //priority: 1000,
                        /*,
                        controller: function($scope){
                            $scope.getTemplateUrl = function(){
                                var url = $scope.sinoFixModule;
                                console.log("getTemplateUrl="+url);
                                return url;
                            };
                        }*/
                        compile:function(){
                            return function ($scope, element, attrs, ctrl) {
                                var type = $scope.$eval(attrs.modType);
                                console.log("type="+type);
                                if(type == 'D'){
                                    var dom = $compile($scope.$eval(attrs.sinoFormModule))($scope);
                                    $(element).append(dom);
                                }else{
                                    var srcUrl = $scope.$eval(attrs.sinoFormModule);
                                    var domStr = '<ng-include src="\''+srcUrl+'\'"></ng-include>';
                                    var dom = $compile(domStr)($scope);
                                    $(element).append(dom);

                                    /*var srcUrl = $scope.$eval(attrs.sinoFormModule);
                                    var changeCounter = 0;
                                    console.log("srcUrl="+srcUrl);
                                    //$scope.$watch($sce.parseAsResourceUrl(srcUrl), function(src) {
                                    var src = srcUrl;
                                        console.log("in watch:"+src);
                                        var thisChangeId = ++changeCounter;
                                        if (src) {
                                            $http.get(src, {cache: $templateCache}).success(function(response) {
                                                console.log("in get:"+response);
                                                if (thisChangeId !== changeCounter)
                                                    return;
                                                //ctrl.template = response;
                                                //var htm = $sce.trustAsHtml(response);
                                                //element.html(htm).show();
                                                //$compile(element.contents())($scope);
                                                var dom = $compile(response)($scope);
                                                $(element).append(dom);
                                            }).error(function() {
                                                if (thisChangeId === changeCounter){
                                                    console.log("get template error")
                                                    //cleanupLastIncludeContent();
                                                }
                                            });
                                        }
                                    //});*/
                                }
                            };
                        }
                    }
                }
            ]);
        });
