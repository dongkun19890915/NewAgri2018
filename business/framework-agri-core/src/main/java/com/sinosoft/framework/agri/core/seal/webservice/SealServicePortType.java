package com.sinosoft.framework.agri.core.seal.webservice;

import javax.jws.*;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.15
 * 2018-01-25T14:11:42.553+08:00
 * Generated source version: 2.7.15
 * 
 */
@WebService(targetNamespace = "http://serv", name = "SealServicePortType")
@XmlSeeAlso({ObjectFactory.class})
public interface SealServicePortType {

    @WebMethod(action = "urn:getClientIp")
    @Action(input = "urn:getClientIp", output = "urn:getClientIpResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getClientIpResponse", targetNamespace = "http://serv", partName = "parameters")
    public GetClientIpResponse getClientIp();

    @WebMethod(action = "urn:setErrormsg")
    @Action(input = "urn:setErrormsg")
    @Oneway
    @RequestWrapper(localName = "setErrormsg", targetNamespace = "http://serv", className = "SetErrormsg")
    public void setErrormsg(
            @WebParam(name = "errormsg", targetNamespace = "http://serv")
                    String errormsg
    );

    @WebMethod(action = "urn:getErrormsg")
    @Action(input = "urn:getErrormsg", output = "urn:getErrormsgResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getErrormsgResponse", targetNamespace = "http://serv", partName = "parameters")
    public GetErrormsgResponse getErrormsg();

    @WebMethod(action = "urn:modelAutoMerger2")
    @Action(input = "urn:modelAutoMerger2", output = "urn:modelAutoMerger2Response", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:modelAutoMerger2Exception")})
    @RequestWrapper(localName = "modelAutoMerger2", targetNamespace = "http://serv", className = "ModelAutoMerger2")
    @ResponseWrapper(localName = "modelAutoMerger2Response", targetNamespace = "http://serv", className = "ModelAutoMerger2Response")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String modelAutoMerger2(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:merSign")
    @Action(input = "urn:merSign", output = "urn:merSignResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:merSignException")})
    @RequestWrapper(localName = "merSign", targetNamespace = "http://serv", className = "MerSign")
    @ResponseWrapper(localName = "merSignResponse", targetNamespace = "http://serv", className = "MerSignResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String merSign(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:modelAutoMerger5")
    @Action(input = "urn:modelAutoMerger5", output = "urn:modelAutoMerger5Response", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:modelAutoMerger5Exception")})
    @RequestWrapper(localName = "modelAutoMerger5", targetNamespace = "http://serv", className = "ModelAutoMerger5")
    @ResponseWrapper(localName = "modelAutoMerger5Response", targetNamespace = "http://serv", className = "ModelAutoMerger5Response")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String modelAutoMerger5(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:addSealToOFD")
    @Action(input = "urn:addSealToOFD", output = "urn:addSealToOFDResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:addSealToOFDException")})
    @RequestWrapper(localName = "addSealToOFD", targetNamespace = "http://serv", className = "AddSealToOFD")
    @ResponseWrapper(localName = "addSealToOFDResponse", targetNamespace = "http://serv", className = "AddSealToOFDResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String addSealToOFD(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:eleFileSign")
    @Action(input = "urn:eleFileSign", output = "urn:eleFileSignResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:eleFileSignException")})
    @RequestWrapper(localName = "eleFileSign", targetNamespace = "http://serv", className = "EleFileSign")
    @ResponseWrapper(localName = "eleFileSignResponse", targetNamespace = "http://serv", className = "EleFileSignResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String eleFileSign(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:pdfVarify")
    @Action(input = "urn:pdfVarify", output = "urn:pdfVarifyResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:pdfVarifyException")})
    @RequestWrapper(localName = "pdfVarify", targetNamespace = "http://serv", className = "PdfVarify")
    @ResponseWrapper(localName = "pdfVarifyResponse", targetNamespace = "http://serv", className = "PdfVarifyResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String pdfVarify(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:updateUser")
    @Action(input = "urn:updateUser", output = "urn:updateUserResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:updateUserException")})
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://serv", className = "UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://serv", className = "UpdateUserResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String updateUser(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:sealAutoPdf56")
    @Action(input = "urn:sealAutoPdf56", output = "urn:sealAutoPdf56Response", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:sealAutoPdf56Exception")})
    @RequestWrapper(localName = "sealAutoPdf56", targetNamespace = "http://serv", className = "SealAutoPdf56")
    @ResponseWrapper(localName = "sealAutoPdf56Response", targetNamespace = "http://serv", className = "SealAutoPdf56Response")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String sealAutoPdf56(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:sealAutoPdf")
    @Action(input = "urn:sealAutoPdf", output = "urn:sealAutoPdfResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:sealAutoPdfException")})
    @RequestWrapper(localName = "sealAutoPdf", targetNamespace = "http://serv", className = "SealAutoPdf")
    @ResponseWrapper(localName = "sealAutoPdfResponse", targetNamespace = "http://serv", className = "SealAutoPdfResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String sealAutoPdf(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(operationName = "pdfVarify_pl", action = "urn:pdfVarify_pl")
    @Action(input = "urn:pdfVarify_pl", output = "urn:pdfVarify_plResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:pdfVarify_plException")})
    @RequestWrapper(localName = "pdfVarify_pl", targetNamespace = "http://serv", className = "PdfVarifyPl")
    @ResponseWrapper(localName = "pdfVarify_plResponse", targetNamespace = "http://serv", className = "PdfVarifyPlResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String pdfVarifyPl(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:setDataToOFD")
    @Action(input = "urn:setDataToOFD", output = "urn:setDataToOFDResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:setDataToOFDException")})
    @RequestWrapper(localName = "setDataToOFD", targetNamespace = "http://serv", className = "SetDataToOFD")
    @ResponseWrapper(localName = "setDataToOFDResponse", targetNamespace = "http://serv", className = "SetDataToOFDResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String setDataToOFD(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:modelAutoMerger")
    @Action(input = "urn:modelAutoMerger", output = "urn:modelAutoMergerResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:modelAutoMergerException")})
    @RequestWrapper(localName = "modelAutoMerger", targetNamespace = "http://serv", className = "ModelAutoMerger")
    @ResponseWrapper(localName = "modelAutoMergerResponse", targetNamespace = "http://serv", className = "ModelAutoMergerResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String modelAutoMerger(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:createSealBmp")
    @Action(input = "urn:createSealBmp", output = "urn:createSealBmpResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:createSealBmpException")})
    @RequestWrapper(localName = "createSealBmp", targetNamespace = "http://serv", className = "CreateSealBmp")
    @ResponseWrapper(localName = "createSealBmpResponse", targetNamespace = "http://serv", className = "CreateSealBmpResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String createSealBmp(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:docAutoOfd")
    @Action(input = "urn:docAutoOfd", output = "urn:docAutoOfdResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:docAutoOfdException")})
    @RequestWrapper(localName = "docAutoOfd", targetNamespace = "http://serv", className = "DocAutoOfd")
    @ResponseWrapper(localName = "docAutoOfdResponse", targetNamespace = "http://serv", className = "DocAutoOfdResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String docAutoOfd(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:varityP1")
    @Action(input = "urn:varityP1", output = "urn:varityP1Response", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:varityP1Exception")})
    @RequestWrapper(localName = "varityP1", targetNamespace = "http://serv", className = "VarityP1")
    @ResponseWrapper(localName = "varityP1Response", targetNamespace = "http://serv", className = "VarityP1Response")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String varityP1(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:getHash")
    @Action(input = "urn:getHash", output = "urn:getHashResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:getHashException")})
    @RequestWrapper(localName = "getHash", targetNamespace = "http://serv", className = "GetHash")
    @ResponseWrapper(localName = "getHashResponse", targetNamespace = "http://serv", className = "GetHashResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String getHash(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:arAutoMerger")
    @Action(input = "urn:arAutoMerger", output = "urn:arAutoMergerResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:arAutoMergerException")})
    @RequestWrapper(localName = "arAutoMerger", targetNamespace = "http://serv", className = "ArAutoMerger")
    @ResponseWrapper(localName = "arAutoMergerResponse", targetNamespace = "http://serv", className = "ArAutoMergerResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String arAutoMerger(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:docAutoaip")
    @Action(input = "urn:docAutoaip", output = "urn:docAutoaipResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:docAutoaipException")})
    @RequestWrapper(localName = "docAutoaip", targetNamespace = "http://serv", className = "DocAutoaip")
    @ResponseWrapper(localName = "docAutoaipResponse", targetNamespace = "http://serv", className = "DocAutoaipResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String docAutoaip(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:aipAutoPdf")
    @Action(input = "urn:aipAutoPdf", output = "urn:aipAutoPdfResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:aipAutoPdfException")})
    @RequestWrapper(localName = "aipAutoPdf", targetNamespace = "http://serv", className = "AipAutoPdf")
    @ResponseWrapper(localName = "aipAutoPdfResponse", targetNamespace = "http://serv", className = "AipAutoPdfResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String aipAutoPdf(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:pdfVarifyL")
    @Action(input = "urn:pdfVarifyL", output = "urn:pdfVarifyLResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:pdfVarifyLException")})
    @RequestWrapper(localName = "pdfVarifyL", targetNamespace = "http://serv", className = "PdfVarifyL")
    @ResponseWrapper(localName = "pdfVarifyLResponse", targetNamespace = "http://serv", className = "PdfVarifyLResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String pdfVarifyL(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:elecFileSignVerify")
    @Action(input = "urn:elecFileSignVerify", output = "urn:elecFileSignVerifyResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:elecFileSignVerifyException")})
    @RequestWrapper(localName = "elecFileSignVerify", targetNamespace = "http://serv", className = "ElecFileSignVerify")
    @ResponseWrapper(localName = "elecFileSignVerifyResponse", targetNamespace = "http://serv", className = "ElecFileSignVerifyResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String elecFileSignVerify(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:deleteUserAndSeal")
    @Action(input = "urn:deleteUserAndSeal", output = "urn:deleteUserAndSealResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:deleteUserAndSealException")})
    @RequestWrapper(localName = "deleteUserAndSeal", targetNamespace = "http://serv", className = "DeleteUserAndSeal")
    @ResponseWrapper(localName = "deleteUserAndSealResponse", targetNamespace = "http://serv", className = "DeleteUserAndSealResponse")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String deleteUserAndSeal(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;

    @WebMethod(action = "urn:sealAutoPdf12121")
    @Action(input = "urn:sealAutoPdf12121", output = "urn:sealAutoPdf12121Response", fault = {@FaultAction(className = Exception_Exception.class, value = "urn:sealAutoPdf12121Exception")})
    @RequestWrapper(localName = "sealAutoPdf12121", targetNamespace = "http://serv", className = "SealAutoPdf12121")
    @ResponseWrapper(localName = "sealAutoPdf12121Response", targetNamespace = "http://serv", className = "SealAutoPdf12121Response")
    @WebResult(name = "return", targetNamespace = "http://serv")
    public String sealAutoPdf12121(
            @WebParam(name = "xmlStr", targetNamespace = "http://serv")
                    String xmlStr
    ) throws Exception_Exception;
}
