<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinosoft.pms.core.arealimit.dao.PrpDareaLimitMapper" >
  <resultMap id="BaseResultMap" type="PrpDareaLimit" >
		<result column="VersionNo" property="versionNo" jdbcType="VARCHAR" />
		<result column="RiskCode" property="riskCode" jdbcType="VARCHAR" />
		<result column="RiskName" property="riskName" jdbcType="VARCHAR" />
		<result column="AreaCode" property="areaCode" jdbcType="VARCHAR" />
		<result column="AreaCName" property="areaCName" jdbcType="VARCHAR" />
		<result column="SalesLimit" property="salesLimit" jdbcType="INTEGER" />
		<result column="EffectDate" property="effectDate" jdbcType="DATE" />
		<result column="InvalidDate" property="invalidDate" jdbcType="DATE" />
		<result column="Flag" property="flag" jdbcType="VARCHAR" />
		<result column="Remark" property="remark" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createTime" jdbcType="DATE" />
		<result column="CreateBy" property="createBy" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="DATE" />
		<result column="UpdateBy" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  versionNo,riskCode,riskName,areaCode,areaCName,salesLimit,effectDate,invalidDate,flag,remark,createTime,createBy,updateTime,updateBy
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="PrpDareaLimitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PrpDareaLimit 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="PrpDareaLimitKey" >
    select 
    <include refid="Base_Column_List" />
    from PrpDareaLimit 
    where 
	 VersionNo = #{versionNo,jdbcType=VARCHAR} and   RiskCode = #{riskCode,jdbcType=VARCHAR} and AreaCode = #{areaCode,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="PrpDareaLimitKey" >
    select 
    <include refid="Base_Column_List" />
    from PrpDareaLimit order by versionNo desc
  </select>
  <select id="selectNew" resultMap="BaseResultMap" parameterType="PrpDareaLimitKey" >
    select * from prpdarealimit where invaliddate = to_date('9999-09-09','yyyy-mm-dd') order by saleslimit desc
  </select>
  <select id="selectByDate" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
  	<include refid="Base_Column_List" />
  	from PrpDareaLimit  where 1=1
<!--   	EffectDate<= to_date(#{effectDate},'YYYY-MM-dd')  -->
  	 order by EffectDate DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="PrpDareaLimitKey" >
    delete from PrpDareaLimit 
    where 
		 VersionNo = #{versionNo,jdbcType=VARCHAR}, RiskCode = #{riskCode,jdbcType=VARCHAR}, AreaCode = #{areaCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="PrpDareaLimit" >
    insert into PrpDareaLimit  (VersionNo,RiskCode,RiskName,AreaCode,AreaCName,SalesLimit,EffectDate,InvalidDate,Flag,Remark,CreateTime,CreateBy,UpdateTime,UpdateBy)
    values (#{versionNo,jdbcType=VARCHAR},#{riskCode,jdbcType=VARCHAR},#{riskName,jdbcType=VARCHAR},#{areaCode,jdbcType=VARCHAR},#{areaCName,jdbcType=VARCHAR},#{salesLimit,jdbcType=INTEGER},#{effectDate,jdbcType=DATE},#{invalidDate,jdbcType=DATE},#{flag,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{createTime,jdbcType=DATE},#{createBy,jdbcType=VARCHAR},#{updateTime,jdbcType=DATE},#{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="PrpDareaLimit" >
    insert into PrpDareaLimit  
    <trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="versionNo != null" >
        VersionNo,
		</if>
<if test="riskCode != null" >
        RiskCode,
		</if>
<if test="riskName != null" >
        RiskName,
		</if>
<if test="areaCode != null" >
        AreaCode,
		</if>
<if test="areaCName != null" >
        AreaCName,
		</if>
<if test="salesLimit != null" >
        SalesLimit,
		</if>
<if test="effectDate != null" >
        EffectDate,
		</if>
<if test="invalidDate != null" >
        InvalidDate,
		</if>
<if test="flag != null" >
        Flag,
		</if>
<if test="remark != null" >
        Remark,
		</if>
<if test="createTime != null" >
        CreateTime,
		</if>
<if test="createBy != null" >
        CreateBy,
		</if>
<if test="updateTime != null" >
        UpdateTime,
		</if>
<if test="updateBy != null" >
        UpdateBy,
		</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="versionNo != null" >
        VersionNo,jdbcType=VARCHAR,
		</if>
		<if test="riskCode != null" >
        RiskCode,jdbcType=VARCHAR,
		</if>
		<if test="riskName != null" >
        RiskName,jdbcType=VARCHAR,
		</if>
		<if test="areaCode != null" >
        AreaCode,jdbcType=VARCHAR,
		</if>
		<if test="areaCName != null" >
        AreaCName,jdbcType=VARCHAR,
		</if>
		<if test="salesLimit != null" >
        SalesLimit,jdbcType=INTEGER,
		</if>
		<if test="effectDate != null" >
        EffectDate,jdbcType=DATE,
		</if>
		<if test="invalidDate != null" >
        InvalidDate,jdbcType=DATE,
		</if>
		<if test="flag != null" >
        Flag,jdbcType=VARCHAR,
		</if>
		<if test="remark != null" >
        Remark,jdbcType=VARCHAR,
		</if>
		<if test="createTime != null" >
        CreateTime,jdbcType=DATE,
		</if>
		<if test="createBy != null" >
        CreateBy,jdbcType=VARCHAR,
		</if>
		<if test="updateTime != null" >
        UpdateTime,jdbcType=DATE,
		</if>
		<if test="updateBy != null" >
        UpdateBy,jdbcType=VARCHAR,
		</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="PrpDareaLimit" >
    update PrpDareaLimit set
    <set >
		

<if test="riskName  != null" >      
        RiskName = #{riskName ,jdbcType=VARCHAR},</if>

<if test="areaCName  != null" >      
        AreaCName = #{areaCName ,jdbcType=VARCHAR},</if>
<if test="salesLimit  != null" >      
        SalesLimit = #{salesLimit ,jdbcType=INTEGER},</if>
<if test="effectDate  != null" >      
        EffectDate = #{effectDate ,jdbcType=DATE},</if>
<if test="invalidDate  != null" >      
        InvalidDate = #{invalidDate ,jdbcType=DATE},</if>
<if test="flag  != null" >      
        Flag = #{flag ,jdbcType=VARCHAR},</if>
<if test="remark  != null" >      
        Remark = #{remark ,jdbcType=VARCHAR},</if>
<if test="createTime  != null" >      
        CreateTime = #{createTime ,jdbcType=DATE},</if>
<if test="createBy  != null" >      
        CreateBy = #{createBy ,jdbcType=VARCHAR},</if>
<if test="updateTime  != null" >      
        UpdateTime = #{updateTime ,jdbcType=DATE},</if>
<if test="updateBy  != null" >      
        UpdateBy = #{updateBy ,jdbcType=VARCHAR},</if>
    </set>
    where 
		<if test="versionNo  != null" >
        VersionNo = #{versionNo ,jdbcType=VARCHAR} and 
      </if>	<if test="riskCode  != null" >
        RiskCode = #{riskCode ,jdbcType=VARCHAR} and 
      </if>	<if test="areaCode  != null" >
        AreaCode = #{areaCode ,jdbcType=VARCHAR}
      </if>		
  </update>
  <update id="updateByPrimaryKey" parameterType="PrpDareaLimit" >
    update PrpDareaLimit
    set 
				
		
<if test="riskName  != null" >RiskName = #{riskName ,jdbcType=VARCHAR},</if>		
		
<if test="areaCName  != null" >AreaCName = #{areaCName ,jdbcType=VARCHAR},</if>		
<if test="salesLimit  != null" >SalesLimit = #{salesLimit ,jdbcType=INTEGER},</if>		
<if test="effectDate  != null" >EffectDate = #{effectDate ,jdbcType=DATE},</if>		
<if test="invalidDate  != null" >InvalidDate = #{invalidDate ,jdbcType=DATE},</if>		
<if test="flag  != null" >Flag = #{flag ,jdbcType=VARCHAR},</if>		
<if test="remark  != null" >Remark = #{remark ,jdbcType=VARCHAR},</if>		
<if test="createTime  != null" >CreateTime = #{createTime ,jdbcType=DATE},</if>		
<if test="createBy  != null" >CreateBy = #{createBy ,jdbcType=VARCHAR},</if>		
<if test="updateTime  != null" >UpdateTime = #{updateTime ,jdbcType=DATE},</if>		
<if test="updateBy  != null" >UpdateBy = #{updateBy ,jdbcType=VARCHAR},</if>		
    where 
			<if test="versionNo  != null" >
        VersionNo = #{versionNo ,jdbcType=VARCHAR} and 
      </if>	<if test="riskCode  != null" >
        RiskCode = #{riskCode ,jdbcType=VARCHAR} and 
      </if>	<if test="areaCode  != null" >
        AreaCode = #{areaCode ,jdbcType=VARCHAR}
      </if>	
  </update>
<!--  非空校验全都放在service层，传到此处的值都不是空的  -->
  <update id="updateInvalidDate" parameterType="PrpDareaLimit" >
    update PrpDareaLimit e
     set e.invaliddate =  #{invalidDate ,jdbcType=DATE}
     ,e.updateTime = #{updateTime,jdbcType=VARCHAR}
     ,e.updateBy = #{updateBy,jdbcType=DATE}
   where e.versionno =
         (select p.versionno
            from PrpDareaLimit p
           where p.riskcode = #{riskCode,jdbcType=VARCHAR}
             and p.invaliddate = to_date('9999-09-09', 'yyyy-mm-dd')
             and p.areacode = #{areaCode,jdbcType=VARCHAR} )
  </update>
  
  <select id="selectArea" resultMap="BaseResultMap" parameterType="PrpDareaLimit" >
    select * from prpdarealimit e 
    join ( select pc.areacode , max(pc.effectdate) as effectdate 
    	from prpdarealimit pc  where pc.effectdate &lt; #{effectDate,jdbcType=DATE}
       group by pc.areacode ) p 
       on p.areacode = e.areacode and p.effectdate = e.effectdate
       where 1=1
       <if test="versionNo  != null" >
        and e.VersionNo = #{versionNo ,jdbcType=VARCHAR}
      </if>	<if test="riskCode  != null" >
        and e.riskCode = #{riskCode ,jdbcType=VARCHAR}
      </if>	<if test="areaCode  != null" >
        and e.areaCode = #{areaCode ,jdbcType=VARCHAR}
      </if>	
  </select>
</mapper>