package com.sinosoft.agriclaim.web.workflowmanage;import com.sinosoft.agriclaim.api.workflowmanage.SwfLogApi;import com.sinosoft.agriclaim.api.workflowmanage.dto.QueryEndcaReturnDto;import com.sinosoft.agriclaim.api.workflowmanage.dto.RequestQueryEndCaseDto;import com.sinosoft.agriclaim.api.workflowmanage.dto.SwfLogDto;import com.sinosoft.agriclaim.core.workflowmanage.service.SwfLogService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.List;import java.util.Map;/** * @author codegen@研发中心 * @mail admin@sinosoft.com.cn * @time  2017-11-08 05:47:03.090  * @description 工作流日志表controller层 */@RestController@RequestMapping(value = SwfLogController.PATH)public class SwfLogController implements SwfLogApi {    private static Logger LOGGER = LoggerFactory.getLogger(SwfLogController.class);    @Autowired    private SwfLogService swfLogService;   /**     *@description 新增     *@param     */    public void save(@RequestBody SwfLogDto swfLogDto) {        swfLogService.save(swfLogDto);    }    /**     *@description 删除     *@param     */    public void remove(@RequestBody String flowId,java.lang.Integer logNo) {        swfLogService.remove(flowId,logNo);    }    /**     *@description 修改     *@param     */    public void modify(@RequestBody SwfLogDto swfLogDto) {        swfLogService.modify(swfLogDto);    }    /**     *@description 按主键查询实体     *@param      */    public SwfLogDto queryByPK(@RequestBody String flowId,java.lang.Integer logNo) {        return swfLogService.queryByPK(flowId,logNo);    }    /**     * （结案任务查询：根据页面输入条件查询结案相关信息）     * @author: 董坤     * @date: 2017/11/10 15:04     * @param requestQueryEndCaseDto 查询页面数据     * @return ResponseDto 查询结果页面数据     * @throws Exception     */    @Override    public QueryEndcaReturnDto queryEndCaseByCondition(@RequestBody RequestQueryEndCaseDto requestQueryEndCaseDto) throws Exception{        return swfLogService.queryEndCaseByCondition(requestQueryEndCaseDto);    }    /**     * @description 取消自动理赔数据查询(查询已完成调度，未进行理算的数据)     * @return SwfLogDtoList 查询结果     * @throws Exception     * @author 李磊     * @date 2018-01-22 11:54     */    @Override    public List<SwfLogDto> querySwfLogDtoList() throws Exception{        return swfLogService.querySwfLogDtoList();    }    /**     * @description 保存自动理赔数据到PrpLAutoClaimList表,并执行自动理赔任务     * @throws Exception     * @author 李磊     * @date 2018-01-23 15:53     */    @Override    public void doClaimTask() throws Exception{        swfLogService.doClaimTask();    }    /**     * 根据传入的不同的业务号码返回相应的流程节点的数据     * @param registNo 报案号     * @return businessNo 业务号 (可以是报案号, 立案号 , 理算书好 , 特殊赔案号)     * @author 王保良     * @time 2018-02-07     */    @Override    public SwfLogDto queryByBusinessNo(@RequestBody Map<String, String> map) throws Exception {        return swfLogService.queryByBusinessNo(map.get("registNo"),map.get("businessNo"));    }}